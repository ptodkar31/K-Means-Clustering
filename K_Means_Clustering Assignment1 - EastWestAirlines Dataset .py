# -*- coding: utf-8 -*-
"""
Created on Wed Feb 21 23:01:27 2024

@author: Priyanka
"""
"""
Perform K means clustering on the airlines dataset to obtain optimum number of clusters. 
Draw the inferences from the clusters obtained.
Refer to EastWestAirlines.xlsx dataset.

Q.What is the business objective?
The main objectives are able to identify which passenger is a business traveler 
it could foreseeably improve its operational results. 
If airbus company can better understand the needs of their passengers
they will be better able to target them with sharper pricing of tickets,
increase client retention with frequent flyer programs and improve ancillary revenue.
The goal of this research effort is to discover a better market segmentation model
suitable for use by airbus company. 
In order to achieve the goals of better understanding airline passengers 
this research effort uses actual passenger flight movement data.
Records were collated and grouped such that for each identifiable unique passenger a record
exists of all their flight movements within a year. Metrics such as
frequency of travel, distance traveled etc.

 

"""


import pandas as pd
import numpy as np
import matplotlib.pylab as plt
from sklearn.cluster import KMeans
# generate random numbers in the range 0 to 1 and with uniform probability of 1/50
X=np.random.uniform(0,1,50)
Y=np.random.uniform(0,1,50)
#create a datafram with 0 rows and 2 columns
df_xy=pd.DataFrame(columns=["X","Y"])
# assign the values of X and Y to these columns
df_xy.X=X
df_xy.Y=Y
df_xy.plot(x="X",y="Y",kind="scatter")
model1=KMeans(n_clusters=3).fit(df_xy)
df_xy.plot(x="X",y="Y",c=model1.labels_,kind="scatter",s=10,cmap=plt.cm.coolwarm)


airlines=pd.read_excel("C:\Data Set\EastWestAirlines.xlsx")
airlines.describe()
airlines=airlines.drop(["ID#","Award?"],axis=1)
plt.hist(data = airlines, x = 'Balance');
#This is apparently not a normal distribution.
plt.hist(data = airlines, x = 'Qual_miles');
#The most of cutomers are eligible for 1000 miles travel in top flights
plt.hist(data = airlines, x = 'cc1_miles');
#Majority customers are eligible for 1 to 1.5 miles in a year

plt.hist(data = airlines, x = 'Bonus_miles');
#Majority customers are eligible for bonus of  1 to 50000 miles

# And with one peak indicate customer is eligible for award travel is between 0 to 0.25
# we know that there is scale difference among the columns,which we have to remove
#either by using normalization or standardization
def norm_func(i):
    x=(i-i.min())/(i.max()-i.min())
    return x
# Now apply this normalization function to airlines datframe for all the
# rows and column from 1 until end
    
df_norm=norm_func(airlines.iloc[:,:])
TWSS=[]
k=list(range(2,14))
# The values generated by TWSS are 12 and two get x and y values 12 by 12 ,
#range has been changed 2:14
for i in k:
    kmeans=KMeans(n_clusters=i)
    kmeans.fit(df_norm)
    TWSS.append(kmeans.inertia_)
TWSS

plt.plot(k,TWSS,'ro-');plt.xlabel("No_of_clusters");plt.ylabel("Total_within_SS")
# from the plot it is clear that the TWSS is reducing from k=2 to 3 
#than any other change in values of k,hence k=3 is selected
model=KMeans(n_clusters=3)
model.fit(df_norm)
model.labels_
mb=pd.Series(model.labels_)
airlines['clust']=mb
airlines.head()
airlines=airlines.iloc[:,[10,0,1,2,3,4,5,6,7,8,9]]
airlines
airlines.iloc[:,:].groupby(airlines.clust).mean()
#Balance - Number of miles eligible for award travel in cluster0=4032 ,
# for cluster1=65972,and for cluster=3 is 113167
#Days since enroll - Number of days since enrolled date.
airlines.to_csv("kmeans_airlines.csv",encoding="utf-8")
import os
os.getcwd()