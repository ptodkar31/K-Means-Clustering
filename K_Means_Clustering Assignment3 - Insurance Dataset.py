# -*- coding: utf-8 -*-
"""
Created on Wed Feb 21 23:03:09 2024

@author: Priyanka
"""

"""
Analyze the information given in the following ‘Insurance Policy dataset’ to  
create clusters of persons falling in the same type. 
Refer to Insurance Dataset.csv

Business Problem:-
What is the business objective?
The chosen problem is one that affects a range of businesses 
when trying to personalise and specialise their marketing strategy
to their customers, in order to have a deeper insight on their activities 
and predict how new ones will behave.
Customer segmentation is the subdivision of the market (customers) 
into groups with similar characteristics . 
The focus of this report will be in customer 
segmentation in the insurance industry but it could also be applied in a range of industries.

Are there any constraints?
Should be able to process the data of large quantities of data points 
(millions of clients to the firm) in a few minutes
Privacy of the data is key (personal information)
Quality of results should be high, as mischarging a client can have high costs
(especially at a large scale)



"""


import pandas as pd
import numpy as np
import matplotlib.pylab as plt
from sklearn.cluster import KMeans

insurance=pd.read_csv("C:\Data Set\Insurance_Dataset.csv")

#EDA
insurance.dtypes
insurance.describe()
# The average premium paid by the customers is 12542,average age of the customer is 46
#The average days to renew is 120.4 and avaerage claims made are 12578
# The average income of the customer is 102250
#The lowest premium paid by the cutomer is 6975,lowest age is 23 years,lowest claims 1978
#The lowest income of the customer is 28000
#The maximum premium paid is 29900 and max age is 82 years
#maximum claims made are 99676 and max.income of the cutomer is 176500
# max.murders are 17.40 ,assualts 337 and 46 Rape

plt.hist(data = insurance, x = 'Premium Paid');
#This is apparently a single bar
plt.hist(data = insurance, x = 'Age');
#It is also almost normallly distributed,maximum customers are in age 45 to 50
plt.hist(data = insurance, x = 'Days to Renew');
##It is not apparantly normally distributed max.days taken by the customers are 0 to 100
plt.hist(data = insurance, x = 'Claims made');
#It is not apparantly normally distributed max.claims made are 0 to 1000
plt.hist(data = insurance, x = 'Income');
#It is uniform distributed and income range from 28000 to 176500 
# we know that there is scale difference among the columns,which we have to remove
#either by using normalization or standardization

def norm_func(i):
    x=(i-i.min())/(i.max()-i.min())
    return x
# Now apply this normalization function to airlines datframe for all the rows and column from 1 until end

df_norm=norm_func(insurance.iloc[:,:])
TWSS=[]
k=list(range(2,8))
# The values generated by TWSS are 12 and two get x and y values 12 by 12 ,range has been changed 2:14

for i in k:
    kmeans=KMeans(n_clusters=i)
    kmeans.fit(df_norm)
    TWSS.append(kmeans.inertia_)
TWSS

plt.plot(k,TWSS,'ro-');plt.xlabel("No_of_clusters");plt.ylabel("Total_within_SS")
# from the plot it is clear that the TWSS is reducing from k=2 to 3 and 3 to 4 
#than any other change in values of k,hence k=3 is selected
model=KMeans(n_clusters=3)
model.fit(df_norm)
model.labels_
mb=pd.Series(model.labels_)
insurance['clust']=mb
insurance.head()
insurance=insurance.iloc[:,[5,0,1,2,3,4]]

insurance.iloc[:,:].groupby(insurance.clust).mean()
#cluster 0 has data entities which has got
#Highest premium paid and age customer is also highest and income of the customers is the highest

insurance.to_csv("kmeans_insurance.csv",encoding="utf-8")
import os
os.getcwd()